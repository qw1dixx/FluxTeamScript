local cloneref = cloneref or function(o) return o end
GuiService = cloneref(game:GetService("GuiService"))
StarterGui = cloneref(game:GetService("StarterGui"))
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Lowcode.gg",
   Icon = 'accessibility', -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "",
   LoadingSubtitle = "",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = true, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Hi there! Click 'Get Key' to begin!",
      Subtitle = "Please enter your key:",
      Note = "", -- Use this to tell the user how to get a key
      FileName = "fluxteamkey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {'lowcode-roblox-gg-community'} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "Sucess",
   Content = "Key is valid! You can proceed.",
   Duration = 2.5,
   Image = "info",
})

Rayfield:Notify({
   Title = "Lowcode.gg has been injected sucessfully",
   Content = "Enjoy using Lowcode.gg!",
   Duration = 8,
   Image = "accessibility",
})

local Tab = Window:CreateTab("Lowcode.gg", "facebook")

local Button = Tab:CreateButton({
   Name = "Open Roblox console",
   Callback = function()
    StarterGui:SetCore("DevConsoleVisible", true)
   end,
})

local Button = Tab:CreateButton({
   Name = "Load old Roblox console",
   Callback = function()
   Rayfield:Notify({
      Title = "Loading",
      Content = "Hold on a sec",
      Duration = 4,
      Image = "accessibility",
   })
loadstring(game.HttpGet(game,"https://raw.githubusercontent.com/infyiff/backup/main/console.lua"))();
	   wait(1)
	Rayfield:Notify({
      Title = "Console",
      Content = "Press F9 to open the console",
      Duration = 3.5,
      Image = "accessibility",
   })
end,
})

local Button = Tab:CreateButton({
   Name = "DEX Explorer",
   Callback = function()
     
      loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
   end,
})

local Button = Tab:CreateButton({
   Name = "Audio Logger",
   Callback = function()
       
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
   end,
})

local Button = Tab:CreateButton({
   Name = "Rejoin",
   Callback = function()
   Rayfield:Notify({
         Title = "Rejoining",
         Content = "Hold on a sec",
         Duration = 2,
         Image = 'accessibility',
      })
      wait(1)
      
   end,
})

local Button = Tab:CreateButton({
   Name = "Auto Rejoin if kicked",
   Callback = function()
      GuiService.ErrorMessageChanged:Connect(function()
         local ts = game:GetService("TeleportService")

local p = game:GetService("Players").LocalPlayer

 

ts:Teleport(game.PlaceId, p)
      end)
      Rayfield:Notify({
         Title = "Auto Rejoin",
         Content = "Auto rejoin enabled",
         Duration = 3,
         Image = "accessibility",
      })
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Volume",
   Range = {0, 10},
   Increment = 1,
   Suffix = "",
   CurrentValue = 6,
   Flag = "SliderVol", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(level)
      UserSettings():GetService("UserGameSettings").MasterVolume = level
   end,
})

local Button = Tab:CreateButton({
   Name = "Sit",
   Callback = function()
      game:GetService("Players").PlayerAdded:Connect(function(player)
         player.Chatted:Connect(function(msg)
             if string.lower(msg) == "/sit" then
                 if not player.Character then return end
     
                 player.Character:WaitForChild("Humanoid").Sit = true
             end
         end)
     end)
   end,
})
